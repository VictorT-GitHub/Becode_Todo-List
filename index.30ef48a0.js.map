{"mappings":"YAKA,IAAMA,EAAYC,SAASC,cAAa,cAElCC,EAAe,qCAEjBC,EAAkBH,SAASC,cAAa,oBAG3CE,EAAeC,YAAcF,EAE9B,IAAIG,EAAa,GAKjBC,WAAWC,iBAAgB,SAAQ,eCbVC,EAAOC,EDe1BV,EAAUW,QAERP,EAAgBC,cAAgBF,IAClCC,EAAgBC,YAAW,GAC3BD,EAAgBQ,UAAUC,OAAM,eCnBbJ,EDuBZH,ECvBmBI,EDuBJV,EAAUW,MCtBpCF,EAAMK,KAAKJ,YA4BeD,EAAOM,EAAaC,GAC9C,IAAIC,EAAOhB,SAASiB,cAAa,WAE7BC,EAAWlB,SAASiB,cAAa,KACrCC,EAASC,UAAYX,EAAMA,EAAMY,OAAS,GAE1C,IAAIC,EAAUrB,SAASiB,cAAa,UACpCI,EAAQF,UAAS,SACjBE,EAAQd,iBAAgB,SAAQ,2BAjBdS,EAAME,EAAUV,EAAOM,EAAaC,GACtDC,EAAKM,kBAfad,EAAOU,GACzBV,EAAMe,OAAOf,EAAMgB,QAAQN,EAASC,WAAY,GAgBhDM,CAAWjB,EAAOU,YAXMV,EAAOM,EAAaC,GACvB,IAAjBP,EAAMY,SACRN,EAAYK,UAAYJ,EACxBD,EAAYH,UAAUC,OAAM,eAU9Bc,CAAiBlB,EAAOM,EAAaC,GAanCY,CAAWX,EAAME,EAAUV,EAAOM,EAAaC,MAGjDC,EAAKY,YAAYV,GACjBF,EAAKY,YAAYP,GAEjBP,EAAYe,aAAab,EAAMF,EAAYgB,SAAS,IDlBlDC,CAAY1B,EAAeF,EAAiBD,YC/BrBO,GACzBA,EAAKC,MAAK,GDiCRsB,CAAWjC","sources":["src/javascript/index.js","src/javascript/functions.js"],"sourcesContent":["import { pushTask, displayTask, clearValue } from \"./functions\";\n\n// ----------------------------------------\n//                 VARIABLES\n// ----------------------------------------\nconst taskInput = document.querySelector(\"#textInput\");\n\nconst textIfEmptyList = \"nothing to do, you can go to sleep\";\n\nlet taskListSection = document.querySelector(\".taskListSection\");\n\n// La liste est vide de base, donc texte présent par default a l ouverture de la page\ntaskListSection.textContent = textIfEmptyList;\n\nlet taskListArray = [];\n\n// --------------------------------------------------------\n//         CLICK EVENT LISTENER : ADD TASK BUTTON\n// --------------------------------------------------------\naddTaskBtn.addEventListener(\"click\", () => {\n  // Fonctionne uniquement si le input texte n'est pas vide (si input.value existe)\n  if (taskInput.value) {\n    // Si présent, retire le texte par default ainsi que son padding-top\n    if (taskListSection.textContent === textIfEmptyList) {\n      taskListSection.textContent = \"\";\n      taskListSection.classList.toggle(\"paddingTop\");\n    }\n\n    // Push new task (inputText.value) in [taskListArray]\n    pushTask(taskListArray, taskInput.value);\n\n    // Create text + btn for the new task and display them in <taskListSection>\n    displayTask(taskListArray, taskListSection, textIfEmptyList);\n\n    // Clear input value after use\n    clearValue(taskInput);\n  }\n});\n","// ---------------------------------------------------------------EXPORT------------\nexport function clearValue(elem) {\n  elem.value = \"\";\n}\n\n// ---------------------------------------------------------------EXPORT------------\nexport function pushTask(array, elem) {\n  array.push(elem);\n}\n\n// ---------------------------------------------------------------------------------\n// Remove element (selected by his index) from his array\nfunction spliceTask(array, taskText) {\n  array.splice(array.indexOf(taskText.innerHTML), 1);\n}\n\n// ---------------------------------------------------------------------------------\n// Add text and padding to an element if the [array] is empty\nfunction addEmptyListText(array, listSection, emptyListText) {\n  if (array.length === 0) {\n    listSection.innerHTML = emptyListText;\n    listSection.classList.toggle(\"paddingTop\");\n  }\n}\n\n// ---------------------------------------------------------------------------------\nfunction removeTask(task, taskText, array, listSection, emptyListText) {\n  task.remove(); // remove element from parent\n\n  spliceTask(array, taskText);\n\n  addEmptyListText(array, listSection, emptyListText);\n}\n\n// ----------------------------------------------------------------EXPORT-----------\nexport function displayTask(array, listSection, emptyListText) {\n  let task = document.createElement(\"article\");\n\n  let taskText = document.createElement(\"p\");\n  taskText.innerHTML = array[array.length - 1];\n\n  let taskBtn = document.createElement(\"button\");\n  taskBtn.innerHTML = \"remove\";\n  taskBtn.addEventListener(\"click\", () =>\n    removeTask(task, taskText, array, listSection, emptyListText)\n  );\n\n  task.appendChild(taskText);\n  task.appendChild(taskBtn);\n\n  listSection.insertBefore(task, listSection.children[0]);\n}\n\n// ---------------------------------------------------------------------------\n"],"names":["$a40a5852877789d6$var$taskInput","document","querySelector","$a40a5852877789d6$var$textIfEmptyList","$a40a5852877789d6$var$taskListSection","textContent","$a40a5852877789d6$var$taskListArray","addTaskBtn","addEventListener","array","elem","value","classList","toggle","push","listSection","emptyListText","task","createElement","taskText","innerHTML","length","taskBtn","remove","splice","indexOf","$69826a4b1a80dc88$var$spliceTask","$69826a4b1a80dc88$var$addEmptyListText","$69826a4b1a80dc88$var$removeTask","appendChild","insertBefore","children","$69826a4b1a80dc88$export$71c216bf6c0f0486","$69826a4b1a80dc88$export$b107d0b4d05afacb"],"version":3,"file":"index.30ef48a0.js.map"}